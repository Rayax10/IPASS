//Boost Software License - Version 1.0 - August 17th, 2003
//
//Permission is hereby granted, free of charge, to any person or organization
//obtaining a copy of the software and accompanying documentation covered by
//this license (the "Software") to use, reproduce, display, distribute,
//execute, and transmit the Software, and to prepare derivative works of the
//Software, and to permit third-parties to whom the Software is furnished to
//do so, all subject to the following:
//
//The copyright notices in the Software and this entire statement, including
//the above license grant, this restriction and the following disclaimer,
//must be included in all copies of the Software, in whole or in part, and
//all derivative works of the Software, unless such copies or derivative
//works are solely in the form of machine-executable object code generated by
//a source language processor.
//
//THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
//SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
//FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
//ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
//DEALINGS IN THE SOFTWARE.
//Author: Ray de Kruif 2-07-2021

#include "hwlib.hpp"
#include "../IPASS/TM1638_IPASS.hpp"
#include "scoreboard.hpp"

void scoreboard::score(){
    while (true){
        if(knop4.read()){
            activate();
            clearall();
            data(g1,a);
            data(g2,l);
            data(g3,l);
            data(g5,o);
            data(g6,v);
            data(g7,e);
            data(g8,r);
            wait(800);
            clearGRIDS();
            standthuis = '0';
            standuit = '0';
            left_right_leds();
        }
        if(knop3.read()){
            data(g1,f);
            data(g2,i);
            data(g3,r);
            data(g4,s);
            data(g5,t);
            data(g6,min);
            data(g7,h);
            wait(15000);
            clearGRIDS();
            data(g1,s);
            data(g2,e);
            data(g3,c);
            data(g4,min);
            data(g5,h);
            wait(1000);
            clearGRIDS();
            left_right_leds();
        }
        if(knop1.read() && standthuis < ':') {
            standthuis++;
            data(g3,g);
            data(g4,o);
            data(g5,a);
            data(g6,l);
            wait(800);
            clearGRIDS();
            wait(500);
        }
        if(knop2.read() && standuit < ':'){
            standuit++;
            data(g3,g);
            data(g4,o);
            data(g5,a);
            data(g6,l);
            wait(800);
            clearGRIDS();
            wait(500);
        }
        case_table(standthuis, g3);
        data(g4, min);
        case_table(standuit ,g5);

    }
}
